services:
  frontend:
    container_name: frontend
    build:
      context: frontend
      dockerfile: Dockerfile
    environment:
      - TZ=Asia/Tokyo
    ports:
      - 8877:8877
    depends_on:
      backend:
        condition: service_healthy
    restart: always

  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "8866:8000"
    environment:
      - TZ=Asia/Tokyo
    healthcheck:
      test: curl -f http://localhost:8000/health/backend || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    depends_on:
      ollama:
        condition: service_healthy
      mongo-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
    develop:
      watch:
        - action: sync
          path: .
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./pyproject.toml
    restart: always

  ollama:
    image: ollama/ollama:0.6.2
    container_name: ollama
    environment:
      - TZ=Asia/Tokyo
    volumes:
      - type: bind
        source: .ollama
        target: /root/.ollama
    restart: always
    healthcheck:
      test: ollama list || exit 1
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    ports:
      - "8778:8080"
    environment:
      - OLLAMA_BASE_URL=http://ollama:11434
      - WEBUI_AUTH=false
    volumes:
      - type: bind
        source: .open-webui
        target: /app/backend/data
    depends_on:
      - ollama
    restart: always

  ollama-model-manager:
    image: ghcr.io/d3v0ps-cloud/ollamamodelmanager:sha-a9d312d
    container_name: ollama-model-manager
    ports:
      - "8788:3000"
    environment:
      - OLLAMA_ENDPOINTS=http://ollama:11434
    depends_on:
      - ollama
    restart: always

  mongo-db:
    image: mongo:8.0.5
    container_name: mongo-db
    restart: always
    environment:
      - TZ=Asia/Tokyo
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27017:27017
    volumes:
      - type: volume
        source: mongodb-data
        target: /data/db
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping').ok" --quiet
      interval: 30s
      timeout: 30s
      retries: 5
      start_period: 60s

  mongo-express:
    image: mongo-express:1.0.2
    container_name: mongo-express
    restart: always
    ports:
      - 8781:8081
    environment:
      - TZ=Asia/Tokyo
      - ME_CONFIG_MONGODB_ADMINUSERNAME=root
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ME_CONFIG_MONGODB_SERVER=mongo-db
      - ME_CONFIG_BASICAUTH_ENABLED=false
    depends_on:
      - mongo-db

  rabbitmq:
    image: rabbitmq:4.0.7-alpine
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - type: volume
        source: rabbitmq-data
        target: /var/lib/rabbitmq
      - type: bind
        source: rabbitmq-log
        target: /var/log/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    restart: always
    healthcheck:
      test: rabbitmqctl status
      interval: 30s
      timeout: 30s
      retries: 3

  minio:
    image: quay.io/minio/minio:RELEASE.2024-10-13T13-34-11Z
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - TZ=Asia/Tokyo
      - MINIO_ROOT_USER=root
      - MINIO_ROOT_PASSWORD=${MINIO_PASSWORD}
    healthcheck:
      test: mc ready local
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - type: volume
        source: minio-data
        target: /data
    command: server /data --console-address ":9001"

volumes:
  ollama:
  open-webui:
  mongodb-data:
  minio-data:
  rabbitmq-data:
